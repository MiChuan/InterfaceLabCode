
FPGA_Ram.elf:     file format elf32-tradlittlemips


Disassembly of section .text_init:

bfc00000 <__reset_vector>:
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:63
/**************************************************************************************
    R E S E T   E X C E P T I O N   H A N D L E R
**************************************************************************************/

LEAF(__reset_vector)
    la a2,__cpu_init
bfc00000:	3c06bfc0 	lui	a2,0xbfc0
bfc00004:	24c60014 	addiu	a2,a2,20
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:64
    jr a2
bfc00008:	00c00008 	jr	a2
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:65
    mtc0    $0, C0_COUNT        # Clear cp0 Count (Used to measure boot time.)
bfc0000c:	40804800 	mtc0	zero,c0_count
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:66
    nop
bfc00010:	00000000 	nop

bfc00014 <__cpu_init>:
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:75
LEAF(__cpu_init)

    # Verify the code is here due to a reset and not NMI. If this is an NMI then trigger
    # a debugger breakpoint using a sdbp instruction.

    mfc0    s1, C0_STATUS       # Read CP0 Status
bfc00014:	40116000 	mfc0	s1,c0_status
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:76
    ext     s1, s1, 19, 1       # extract NMI
bfc00018:	7e3104c0 	ext	s1,s1,0x13,0x1
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:77
    beqz    s1, init_resources  # Branch if this is NOT an NMI exception.
bfc0001c:	12200002 	beqz	s1,bfc00028 <init_resources>
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:78
    nop
bfc00020:	00000000 	nop
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:79
    sdbbp                       # Failed assertion: NMI.
bfc00024:	7000003f 	sdbbp

bfc00028 <init_resources>:
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:85

init_resources:                 # initializes resources for "cpu".

    # Initialize CP0 registers

    la a2,      init_cp0        # Init CP0 Status, Count, Compare, Watch*, and Cause.
bfc00028:	3c06bfc0 	lui	a2,0xbfc0
bfc0002c:	24c60288 	addiu	a2,a2,648
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:86
    jalr a2
bfc00030:	00c0f809 	jalr	a2
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:87
    nop
bfc00034:	00000000 	nop
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:118
  #  jalr    a2
  #  nop

    # Prepare for eret to main.

    la      ra, all_done        # If main returns then go to all_done:.
bfc00038:	3c1fbfc0 	lui	ra,0xbfc0
bfc0003c:	27ff0058 	addiu	ra,ra,88
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:119
    move    a0, zero            # Indicate that there are no arguments available.
bfc00040:	00002025 	move	a0,zero
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:120
    la      v0, _start          # load the address of the CRT entry point _start.
bfc00044:	3c02bfc0 	lui	v0,0xbfc0
bfc00048:	24420130 	addiu	v0,v0,304
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:121
    mtc0    v0, $30             # Write ErrorEPC with the address of main
bfc0004c:	4082f000 	mtc0	v0,c0_errorepc
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:122
    ehb                         # clear hazards (makes sure write to ErrorPC has completed)
bfc00050:	000000c0 	ehb
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:126

    # Return from exception will now execute code in main

    eret                        # Exit reset exception handler and start execution of _start.
bfc00054:	42000018 	eret

bfc00058 <all_done>:
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:132


/**************************************************************************************/
all_done:
    # If main returns it will return to this point.  Just spin here.
    b       all_done
bfc00058:	1000ffff 	b	bfc00058 <all_done>
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:133
    nop
bfc0005c:	00000000 	nop

bfc00060 <init_icache>:
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:60
LEAF(init_icache)

	// Can be skipped if using magic simulation cache flush

	// Determine how big the I$ is
	mfc0	v0, C0_CONFIG1		// read C0_Config1
bfc00060:	40028001 	mfc0	v0,c0_config1
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:63

	// Isolate I$ Line Size
	ext	    v1, v0, CFG1_ILSHIFT, 3		// extract IL
bfc00064:	7c4314c0 	ext	v1,v0,0x13,0x3
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:66

	// Skip ahead if No I$
	beq	    v1, zero, done_icache
bfc00068:	10600011 	beqz	v1,bfc000b0 <done_icache>
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:67
	nop
bfc0006c:	00000000 	nop
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:69

	li	    a2, 2
bfc00070:	24060002 	li	a2,2
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:70
	sllv    v1, a2, v1			// Now have true I$ line size in bytes
bfc00074:	00661804 	sllv	v1,a2,v1
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:72

	ext	    a0, v0, CFG1_ISSHIFT, 3		// extract IS
bfc00078:	7c441580 	ext	a0,v0,0x16,0x3
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:73
	li	    a2, 64
bfc0007c:	24060040 	li	a2,64
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:74
	sllv    a0, a2, a0			// I$ Sets per way
bfc00080:	00862004 	sllv	a0,a2,a0
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:77

	// Config1IA == I$ Assoc - 1
	ext	    a1, v0, CFG1_IASHIFT, 3		// extract IA
bfc00084:	7c451400 	ext	a1,v0,0x10,0x3
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:78
	add	    a1, 1
bfc00088:	20a50001 	addi	a1,a1,1
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:80

	mul	    a0, a0, a1			// Total number of sets
bfc0008c:	70852002 	mul	a0,a0,a1
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:82

	lui	    a2, 0x8000			// Get a KSeg0 address for cacheops
bfc00090:	3c068000 	lui	a2,0x8000
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:85

	// Clear TagLo/TagHi registers
	mtc0    zero, C0_TAGLO		// write C0_ITagLo
bfc00094:	4080e000 	mtc0	zero,c0_taglo
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:86
	mtc0    zero, C0_TAGHI		// write C0_ITagHi
bfc00098:	4080e800 	mtc0	zero,c0_taghi
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:88

	move    a3, a0
bfc0009c:	00803825 	move	a3,a0

bfc000a0 <next_icache_tag>:
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:93

next_icache_tag:
	// Index Store Tag Cache Op
	// Will invalidate the tag entry, clear the lock bit, and clear the LRF bit
	cache   0x8, 0(a2)			// ICIndexStTag
bfc000a0:	bcc80000 	cache	0x8,0(a2)
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:94
	add	    a3, -1				// Decrement set counter
bfc000a4:	20e7ffff 	addi	a3,a3,-1
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:95
	bne     a3, zero, next_icache_tag
bfc000a8:	14e0fffd 	bnez	a3,bfc000a0 <next_icache_tag>
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:96
	add     a2, v1				// Get next line address
bfc000ac:	00c33020 	add	a2,a2,v1

bfc000b0 <done_icache>:
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:100

done_icache:

    jr      ra
bfc000b0:	03e00008 	jr	ra
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:101
    nop
bfc000b4:	00000000 	nop

bfc000b8 <init_dcache>:
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:110
* init_dcache invalidates all data cache entries
**************************************************************************************/

LEAF(init_dcache)

	mfc0	v0, C0_CONFIG1		// read C0_Config1
bfc000b8:	40028001 	mfc0	v0,c0_config1
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:113

	// Isolate D$ Line Size
	ext	    v1, v0, CFG1_DLSHIFT, 3		// extract DL
bfc000bc:	7c431280 	ext	v1,v0,0xa,0x3
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:116

	// Skip ahead if No D$
	beq	    v1, zero, done_dcache
bfc000c0:	10600013 	beqz	v1,bfc00110 <done_dcache>
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:117
	nop
bfc000c4:	00000000 	nop
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:119

	li	    a2, 2
bfc000c8:	24060002 	li	a2,2
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:120
	sllv	v1, a2, v1			// Now have true D$ line size in bytes
bfc000cc:	00661804 	sllv	v1,a2,v1
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:122

	ext	    a0, v0, CFG1_DSSHIFT, 3		// extract DS
bfc000d0:	7c441340 	ext	a0,v0,0xd,0x3
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:123
	li	    a2, 64
bfc000d4:	24060040 	li	a2,64
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:124
	sllv	a0, a2, a0	// D$ Sets per way
bfc000d8:	00862004 	sllv	a0,a2,a0
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:127

	// Config1DA == D$ Assoc - 1
	ext	    a1, v0, CFG1_DASHIFT, 3		// extract DA
bfc000dc:	7c4511c0 	ext	a1,v0,0x7,0x3
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:128
	add	    a1, 1
bfc000e0:	20a50001 	addi	a1,a1,1
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:130

	mul	    a0, a0, a1			// Get total number of sets
bfc000e4:	70852002 	mul	a0,a0,a1
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:132

	lui	    a2, 0x8000		    // Get a KSeg0 address for cacheops
bfc000e8:	3c068000 	lui	a2,0x8000
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:135

	// Clear TagLo/TagHi registers
	mtc0	zero, C0_TAGLO		// write C0_TagLo
bfc000ec:	4080e000 	mtc0	zero,c0_taglo
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:136
	mtc0	zero, C0_TAGHI		// write C0_TagHi
bfc000f0:	4080e800 	mtc0	zero,c0_taghi
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:137
	mtc0	zero, C0_TAGLO, 2	// write C0_DTagLo
bfc000f4:	4080e002 	mtc0	zero,c0_taglo1
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:138
	mtc0	zero, C0_TAGHI, 2	// write C0_DTagHi
bfc000f8:	4080e802 	mtc0	zero,c0_taghi1
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:140

	move	a3, a0
bfc000fc:	00803825 	move	a3,a0

bfc00100 <next_dcache_tag>:
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:146

next_dcache_tag:
	// Index Store Tag Cache Op
	// Will invalidate the tag entry, clear the lock bit, and clear the LRF bit

    cache	0x9, 0(a2)			// DCIndexStTag
bfc00100:	bcc90000 	cache	0x9,0(a2)
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:147
	add	    a3, -1			    // Decrement set counter
bfc00104:	20e7ffff 	addi	a3,a3,-1
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:149

	bne	    a3, zero, next_dcache_tag
bfc00108:	14e0fffd 	bnez	a3,bfc00100 <next_dcache_tag>
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:150
	add	    a2, v1		    	// Get next line address
bfc0010c:	00c33020 	add	a2,a2,v1

bfc00110 <done_dcache>:
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:153

done_dcache:
    jr      ra
bfc00110:	03e00008 	jr	ra
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:154
    nop
bfc00114:	00000000 	nop

bfc00118 <change_k0_cca>:
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:160
END(init_dcache)

LEAF(change_k0_cca)
	// NOTE! This code must be executed in KSEG1 (not KSGE0 uncached)
    // Set CCA for kseg0 to cacheable
	mfc0	v0, C0_CONFIG	// read C0_Config
bfc00118:	40028000 	mfc0	v0,c0_config
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:161
	li	v1, 3			// CCA for single-core processors
bfc0011c:	24030003 	li	v1,3
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:162
      ins	v0, v1, 0, 3	// insert K0
bfc00120:	7c621004 	ins	v0,v1,0x0,0x3
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:163
	mtc0	v0, C0_CONFIG	// write C0_Config
bfc00124:	40828000 	mtc0	v0,c0_config
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:164
	jr.hb   ra
bfc00128:	03e00408 	jr.hb	ra
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_caches.S:165
    	nop
bfc0012c:	00000000 	nop

bfc00130 <_start>:
C:\workspace\lab3\MIPSfpga_CustomIP_C/mini_crt0.S:59
/**************************************************************************************
**************************************************************************************/
LEAF(_start)

    # Set the global pointer register address to _gp - value set in linker .ld file
    la      gp, _gp             # All share globals.
bfc00130:	3c1cbfc1 	lui	gp,0xbfc1
bfc00134:	279c94d8 	addiu	gp,gp,-27432
C:\workspace\lab3\MIPSfpga_CustomIP_C/mini_crt0.S:62

    # Set up the stack pointer register to STACK_BASE_ADDR defined in boot.h
    li      sp, STACK_BASE_ADDR # Set up stack base.
bfc00138:	3c1dbfc0 	lui	sp,0xbfc0
bfc0013c:	37bd0900 	ori	sp,sp,0x900
C:\workspace\lab3\MIPSfpga_CustomIP_C/mini_crt0.S:65

    # Make a stack frame; must be a multiple of 8-bytes
    addiu   sp, sp, -8
bfc00140:	27bdfff8 	addiu	sp,sp,-8
C:\workspace\lab3\MIPSfpga_CustomIP_C/mini_crt0.S:68

    # Preserve return address over the call to main
    sw      ra, 0(sp)
bfc00144:	afbf0000 	sw	ra,0(sp)
C:\workspace\lab3\MIPSfpga_CustomIP_C/mini_crt0.S:70

    li      s1_all_ones, 0xffffffff
bfc00148:	2411ffff 	li	s1,-1

bfc0014c <zero_bss>:
C:\workspace\lab3\MIPSfpga_CustomIP_C/mini_crt0.S:73

zero_bss:
    la      t1_temp_addr, _fbss
bfc0014c:	3c09bfc0 	lui	t1,0xbfc0
bfc00150:	252914d8 	addiu	t1,t1,5336
C:\workspace\lab3\MIPSfpga_CustomIP_C/mini_crt0.S:74
    ins     t1_temp_addr, s1_all_ones, 29, 1
bfc00154:	7e29ef44 	ins	t1,s1,0x1d,0x1
C:\workspace\lab3\MIPSfpga_CustomIP_C/mini_crt0.S:75
    la      t3_temp_mark, _end
bfc00158:	3c0bbfc0 	lui	t3,0xbfc0
bfc0015c:	256b14d8 	addiu	t3,t3,5336
C:\workspace\lab3\MIPSfpga_CustomIP_C/mini_crt0.S:76
    ins     t3_temp_mark, s1_all_ones, 29, 1
bfc00160:	7e2bef44 	ins	t3,s1,0x1d,0x1
C:\workspace\lab3\MIPSfpga_CustomIP_C/mini_crt0.S:77
    beq     t1_temp_addr, t3_temp_mark, invoke_main
bfc00164:	112b0005 	beq	t1,t3,bfc0017c <invoke_main>
C:\workspace\lab3\MIPSfpga_CustomIP_C/mini_crt0.S:78
    nop
bfc00168:	00000000 	nop

bfc0016c <next_bss_word>:
C:\workspace\lab3\MIPSfpga_CustomIP_C/mini_crt0.S:80
next_bss_word:
    sw      zero, 0(t1_temp_addr)
bfc0016c:	ad200000 	sw	zero,0(t1)
C:\workspace\lab3\MIPSfpga_CustomIP_C/mini_crt0.S:81
    addiu   t1_temp_addr, 4
bfc00170:	25290004 	addiu	t1,t1,4
C:\workspace\lab3\MIPSfpga_CustomIP_C/mini_crt0.S:82
    bne     t1_temp_addr, t3_temp_mark, next_bss_word
bfc00174:	152bfffd 	bne	t1,t3,bfc0016c <next_bss_word>
C:\workspace\lab3\MIPSfpga_CustomIP_C/mini_crt0.S:83
    nop
bfc00178:	00000000 	nop

bfc0017c <invoke_main>:
C:\workspace\lab3\MIPSfpga_CustomIP_C/mini_crt0.S:86

invoke_main:
    la      t0, main
bfc0017c:	3c08bfc0 	lui	t0,0xbfc0
bfc00180:	25081104 	addiu	t0,t0,4356
C:\workspace\lab3\MIPSfpga_CustomIP_C/mini_crt0.S:88
    # Create space for the o32 argument stack
    addiu   sp, sp, -16
bfc00184:	27bdfff0 	addiu	sp,sp,-16
C:\workspace\lab3\MIPSfpga_CustomIP_C/mini_crt0.S:90
    # Call main
    jalr    t0
bfc00188:	0100f809 	jalr	t0
C:\workspace\lab3\MIPSfpga_CustomIP_C/mini_crt0.S:91
    nop
bfc0018c:	00000000 	nop
C:\workspace\lab3\MIPSfpga_CustomIP_C/mini_crt0.S:93

    lw      ra, 0(sp)
bfc00190:	8fbf0000 	lw	ra,0(sp)
C:\workspace\lab3\MIPSfpga_CustomIP_C/mini_crt0.S:94
    addiu   sp, sp, 8
bfc00194:	27bd0008 	addiu	sp,sp,8
C:\workspace\lab3\MIPSfpga_CustomIP_C/mini_crt0.S:95
    jr      ra
bfc00198:	03e00008 	jr	ra
C:\workspace\lab3\MIPSfpga_CustomIP_C/mini_crt0.S:96
    nop
bfc0019c:	00000000 	nop
	...
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:149
**************************************************************************************/
/* NOTE: the linker script must insure that this code starts at start + 0x200 so the exception */
/* vectors will be addressed properly. All .org assume this! */
/* TLB refill, 32 bit task. */
.org 0x200                      # TLB refill, 32 bit task.
    sdbbp                       # This has the effect of starting the debugger
bfc00200:	7000003f 	sdbbp
	...
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:153
    nop

.org 0x280                      # XTLB refill, 64 bit task. start + 0x280
    sdbbp                       # This has the effect of starting the debugger
bfc00280:	7000003f 	sdbbp
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:154
    nop
bfc00284:	00000000 	nop

bfc00288 <init_cp0>:
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:56
/**************************************************************************************
**************************************************************************************/
LEAF(init_cp0)

    // Initialize Status
	li	v1, 0x00400404		// (M_StatusERL | M_StatusIPL1 | M_StatusBEV)
bfc00288:	3c030040 	lui	v1,0x40
bfc0028c:	34630404 	ori	v1,v1,0x404
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:57
	mtc0	v1, C0_STATUS		// write C0_Status
bfc00290:	40836000 	mtc0	v1,c0_status
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:60

	// Initialize Watch registers if implemented.
	mfc0	v0, C0_CONFIG1		// read C0_Config1
bfc00294:	40028001 	mfc0	v0,c0_config1
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:61
	ext	v1, v0, 3, 1		// extract bit 3 WR (Watch registers implemented)
bfc00298:	7c4300c0 	ext	v1,v0,0x3,0x1
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:62
	beq 	v1, zero, done_wr
bfc0029c:	10600011 	beqz	v1,bfc002e4 <done_wr>
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:63
	li    	v1, 0x7				// (M_WatchHiI | M_WatchHiR | M_WatchHiW)
bfc002a0:	24030007 	li	v1,7
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:66

	// Clear all possible Watch Status bits and disable watch exceptions
	mtc0	v1, C0_WATCHHI		// write C0_WatchHi0
bfc002a4:	40839800 	mtc0	v1,c0_watchhi
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:67
	mtc0	zero, C0_WATCHLO	// write C0_WatchLo0
bfc002a8:	40809000 	mtc0	zero,c0_watchlo
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:69

	mtc0	v1, C0_WATCHHI, 1	// write C0_WatchHi1
bfc002ac:	40839801 	mtc0	v1,c0_watchhi,1
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:70
	mtc0	zero, C0_WATCHLO, 1	// write C0_WatchLo1
bfc002b0:	40809001 	mtc0	zero,c0_watchlo,1
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:72

	mtc0	v1, C0_WATCHHI, 2	// write C0_WatchHi2
bfc002b4:	40839802 	mtc0	v1,c0_watchhi,2
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:73
	mtc0	zero, C0_WATCHLO, 2	// write C0_WatchLo2
bfc002b8:	40809002 	mtc0	zero,c0_watchlo,2
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:75

	mtc0	v1, C0_WATCHHI, 3	// write C0_WatchHi3
bfc002bc:	40839803 	mtc0	v1,c0_watchhi,3
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:76
	mtc0	zero, C0_WATCHLO, 3	// write C0_WatchLo3
bfc002c0:	40809003 	mtc0	zero,c0_watchlo,3
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:78

	mtc0	v1, C0_WATCHHI, 4	// write C0_WatchHi4
bfc002c4:	40839804 	mtc0	v1,c0_watchhi,4
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:79
	mtc0	zero, C0_WATCHLO, 4	// write C0_WatchLo4
bfc002c8:	40809004 	mtc0	zero,c0_watchlo,4
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:81

	mtc0	v1, C0_WATCHHI, 5	// write C0_WatchHi5
bfc002cc:	40839805 	mtc0	v1,c0_watchhi,5
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:82
	mtc0	zero, C0_WATCHLO, 5	// write C0_WatchLo5
bfc002d0:	40809005 	mtc0	zero,c0_watchlo,5
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:84

	mtc0	v1, C0_WATCHHI, 6	// write C0_WatchHi6
bfc002d4:	40839806 	mtc0	v1,c0_watchhi,6
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:85
	mtc0	zero, C0_WATCHLO, 6	// write C0_WatchLo6
bfc002d8:	40809006 	mtc0	zero,c0_watchlo,6
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:87

	mtc0	v1, C0_WATCHHI, 7	// write C0_WatchHi7
bfc002dc:	40839807 	mtc0	v1,c0_watchhi,7
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:88
	mtc0	zero, C0_WATCHLO, 7	// write C0_WatchLo7
bfc002e0:	40809007 	mtc0	zero,c0_watchlo,7

bfc002e4 <done_wr>:
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:93

done_wr:

	// Clear WP bit to avoid watch exception upon user code entry, IV, and software interrupts.
	mtc0	zero, C0_CAUSE		// write C0_Cause: Init AFTER init of CP0 WatchHi/Lo registers.
bfc002e4:	40806800 	mtc0	zero,c0_cause
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:96

	// Clear timer interrupt. (Count was cleared at the reset vector to allow timing boot.)
	mtc0	zero, C0_COMPARE	// write C0_Compare
bfc002e8:	40805800 	mtc0	zero,c0_compare
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:98

        jr      ra
bfc002ec:	03e00008 	jr	ra
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_cp0.S:99
	nop
bfc002f0:	00000000 	nop
	...
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:159

#include "init_cp0.S"

.org 0x300                      # Cache error exception. start + 0x300
    sdbbp                       # This has the effect of starting the debugger
bfc00300:	7000003f 	sdbbp
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:160
    nop
bfc00304:	00000000 	nop

bfc00308 <init_tlb>:
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_tlb.S:57
**************************************************************************************/
LEAF(init_tlb)

check_for_tlb:
	// Determine if we have a TLB
	mfc0    v1, C0_CONFIG			// read C0_Config
bfc00308:	40038000 	mfc0	v1,c0_config
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_tlb.S:58
	ext	    v1, v1, 7, 3			// extract MT field
bfc0030c:	7c6311c0 	ext	v1,v1,0x7,0x3
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_tlb.S:59
	li	    a3, 0x1					// load a 1 to check against
bfc00310:	24070001 	li	a3,1
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_tlb.S:60
	bne	    v1, a3, done_init_tlb
bfc00314:	1467000f 	bne	v1,a3,bfc00354 <done_init_tlb>
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_tlb.S:61
	mfc0    v0, C0_CONFIG1			// C0_Config1
bfc00318:	40028001 	mfc0	v0,c0_config1
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_tlb.S:62
	nop
bfc0031c:	00000000 	nop

bfc00320 <start_init_tlb>:
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_tlb.S:66

start_init_tlb:
	// Config1MMUSize == Number of TLB entries - 1
	ext     v1, v0, CFG1_MMUSSHIFT, 6 // extract MMU Size
bfc00320:	7c432e40 	ext	v1,v0,0x19,0x6
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_tlb.S:67
	mtc0    zero, C0_ENTRYLO0		// write C0_EntryLo0
bfc00324:	40801000 	mtc0	zero,c0_entrylo0
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_tlb.S:68
	mtc0    zero, C0_ENTRYLO1		// write C0_EntryLo1
bfc00328:	40801800 	mtc0	zero,c0_entrylo1
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_tlb.S:69
	mtc0    zero, C0_PAGEMASK		// write C0_PageMask
bfc0032c:	40802800 	mtc0	zero,c0_pagemask
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_tlb.S:70
	mtc0    zero, C0_WIRED			// write C0_Wired
bfc00330:	40803000 	mtc0	zero,c0_wired
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_tlb.S:71
	li	    a0, 0x80000000
bfc00334:	3c048000 	lui	a0,0x8000

bfc00338 <next_tlb_entry_pair>:
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_tlb.S:74

next_tlb_entry_pair:
	mtc0    v1, C0_INDEX			// write C0_Index
bfc00338:	40830000 	mtc0	v1,c0_index
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_tlb.S:75
	mtc0	a0, C0_ENTRYHI			// write C0_EntryHi
bfc0033c:	40845000 	mtc0	a0,c0_entryhi
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_tlb.S:76
	ehb
bfc00340:	000000c0 	ehb
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_tlb.S:77
	tlbwi
bfc00344:	42000002 	tlbwi
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_tlb.S:78
	add	    a0, (2<<13)				// Add 8K to the address to avoid TLB conflict with previous entry
bfc00348:	20844000 	addi	a0,a0,16384
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_tlb.S:80

	bne		v1, zero, next_tlb_entry_pair
bfc0034c:	1460fffa 	bnez	v1,bfc00338 <next_tlb_entry_pair>
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_tlb.S:81
	add	    v1, -1
bfc00350:	2063ffff 	addi	v1,v1,-1

bfc00354 <done_init_tlb>:
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_tlb.S:84

done_init_tlb:
    jr      ra
bfc00354:	03e00008 	jr	ra
C:\workspace\lab3\MIPSfpga_CustomIP_C/init_tlb.S:85
    nop
bfc00358:	00000000 	nop
	...
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:167
#include "init_tlb.S"


.org 0x380    /* General exception. */
    # display alternating one-zeros on board LEDs
    li      k0, BOARD_16_LEDS_ADDR  # Board LEDs display
bfc00380:	3c1ab060 	lui	k0,0xb060
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:168
    li      k1, 0x5555          # alternating one-zeros
bfc00384:	241b5555 	li	k1,21845
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:169
    sw      k1, 0(k0)           # Write pattern to LEDs
bfc00388:	af5b0000 	sw	k1,0(k0)
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:170
    eret
bfc0038c:	42000018 	eret
	...
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:177

# If you want the above code to fit into 1k flash you will need to leave out the
# code below. This is the code that covers the debug exception which you normally will not get.

.org 0x480 /* EJTAG debug exception (EJTAG Control Register[ProbTrap] == 0.) */
    li      r24_malta_word, BOARD_16_LEDS_ADDR     # If post boot then $24 is clobbered.
bfc00480:	3c18b060 	lui	t8,0xb060
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:178
    mtc0    a0, C0_DESAVE       # DeSave a0
bfc00484:	4084f800 	mtc0	a0,c0_desave
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:179
    mfc0    a0, C0_DEPC         # Read DEPC
bfc00488:	4004c000 	mfc0	a0,c0_depc
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:180
    sw      a0, 0(r24_malta_word)    # Display lower 16 bits of DEPC if there is not an EJTAG probe.
bfc0048c:	af040000 	sw	a0,0(t8)
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:181
    mfc0    a0, C0_DESAVE       # Restore a0
bfc00490:	4004f800 	mfc0	a0,c0_desave
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:182
1:  b       1b  /* Stay here */
bfc00494:	1000ffff 	b	bfc00494 <done_init_tlb+0x140>
C:\workspace\lab3\MIPSfpga_CustomIP_C/boot.S:183
    nop
bfc00498:	00000000 	nop
done_init_tlb():
bfc0049c:	00000000 	nop

Disassembly of section .text_ram:

bfc01000 <delay>:
delay():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:117
	}
	
	return 0;
}

void delay() {
bfc01000:	27bdfff8 	addiu	sp,sp,-8
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:120
	volatile unsigned int j;

	for (j = 0; j < (10000); j++) ;	// delay 
bfc01004:	afa00000 	sw	zero,0(sp)
bfc01008:	8fa20000 	lw	v0,0(sp)
bfc0100c:	2c422710 	sltiu	v0,v0,10000
bfc01010:	10400008 	beqz	v0,bfc01034 <delay+0x34>
bfc01014:	00000000 	nop
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:120 (discriminator 3)
bfc01018:	8fa20000 	lw	v0,0(sp)
bfc0101c:	24420001 	addiu	v0,v0,1
bfc01020:	afa20000 	sw	v0,0(sp)
bfc01024:	8fa20000 	lw	v0,0(sp)
bfc01028:	2c422710 	sltiu	v0,v0,10000
bfc0102c:	1440fffa 	bnez	v0,bfc01018 <delay+0x18>
bfc01030:	00000000 	nop
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:121
}
bfc01034:	03e00008 	jr	ra
bfc01038:	27bd0008 	addiu	sp,sp,8

bfc0103c <uart_outbyte>:
uart_outbyte():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:123

void uart_outbyte(char c) {
bfc0103c:	27bdfff8 	addiu	sp,sp,-8
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:124
	*WRITE_IO(UART_BASE + thr) = (unsigned int) c;
bfc01040:	3c02b040 	lui	v0,0xb040
bfc01044:	ac441000 	sw	a0,4096(v0)
delay():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:120
	for (j = 0; j < (10000); j++) ;	// delay 
bfc01048:	afa00000 	sw	zero,0(sp)
bfc0104c:	8fa20000 	lw	v0,0(sp)
bfc01050:	2c422710 	sltiu	v0,v0,10000
bfc01054:	10400008 	beqz	v0,bfc01078 <uart_outbyte+0x3c>
bfc01058:	00000000 	nop
bfc0105c:	8fa20000 	lw	v0,0(sp)
bfc01060:	24420001 	addiu	v0,v0,1
bfc01064:	afa20000 	sw	v0,0(sp)
bfc01068:	8fa20000 	lw	v0,0(sp)
bfc0106c:	2c422710 	sltiu	v0,v0,10000
bfc01070:	1440fffa 	bnez	v0,bfc0105c <uart_outbyte+0x20>
bfc01074:	00000000 	nop
uart_outbyte():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:126
	delay( );
}
bfc01078:	03e00008 	jr	ra
bfc0107c:	27bd0008 	addiu	sp,sp,8

bfc01080 <uart_inbyte>:
uart_inbyte():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:131

char uart_inbyte(void) {
	unsigned int RecievedByte;
	
	while(!((*READ_IO(UART_BASE + lsr) & 0x00000001)==0x00000001));
bfc01080:	3c03b040 	lui	v1,0xb040
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:131 (discriminator 1)
bfc01084:	8c621014 	lw	v0,4116(v1)
bfc01088:	30420001 	andi	v0,v0,0x1
bfc0108c:	1040fffd 	beqz	v0,bfc01084 <uart_inbyte+0x4>
bfc01090:	3c02b040 	lui	v0,0xb040
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:133

	RecievedByte = *READ_IO(UART_BASE + rbr);
bfc01094:	8c421000 	lw	v0,4096(v0)
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:136

	return (char)RecievedByte;
}
bfc01098:	03e00008 	jr	ra
bfc0109c:	304200ff 	andi	v0,v0,0xff

bfc010a0 <uart_print>:
uart_print():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:140

void uart_print(const char *ptr)
{
	while (*ptr) {
bfc010a0:	90820000 	lbu	v0,0(a0)
bfc010a4:	10400015 	beqz	v0,bfc010fc <uart_print+0x5c>
bfc010a8:	00000000 	nop
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:139
{
bfc010ac:	27bdfff8 	addiu	sp,sp,-8
bfc010b0:	3c03b040 	lui	v1,0xb040
uart_outbyte():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:124
	*WRITE_IO(UART_BASE + thr) = (unsigned int) c;
bfc010b4:	ac621000 	sw	v0,4096(v1)
delay():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:120
	for (j = 0; j < (10000); j++) ;	// delay 
bfc010b8:	afa00000 	sw	zero,0(sp)
bfc010bc:	8fa20000 	lw	v0,0(sp)
bfc010c0:	2c422710 	sltiu	v0,v0,10000
bfc010c4:	50400009 	beqzl	v0,bfc010ec <uart_print+0x4c>
bfc010c8:	24840001 	addiu	a0,a0,1
bfc010cc:	8fa20000 	lw	v0,0(sp)
bfc010d0:	24420001 	addiu	v0,v0,1
bfc010d4:	afa20000 	sw	v0,0(sp)
bfc010d8:	8fa20000 	lw	v0,0(sp)
bfc010dc:	2c422710 	sltiu	v0,v0,10000
bfc010e0:	1440fffa 	bnez	v0,bfc010cc <uart_print+0x2c>
bfc010e4:	00000000 	nop
uart_print():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:142
		uart_outbyte (*ptr);
		ptr++;
bfc010e8:	24840001 	addiu	a0,a0,1
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:140
	while (*ptr) {
bfc010ec:	90820000 	lbu	v0,0(a0)
bfc010f0:	1440fff0 	bnez	v0,bfc010b4 <uart_print+0x14>
bfc010f4:	00000000 	nop
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:144
	}
}
bfc010f8:	27bd0008 	addiu	sp,sp,8
bfc010fc:	03e00008 	jr	ra
bfc01100:	00000000 	nop

bfc01104 <main>:
main():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:41
int main() {
bfc01104:	27bdffc8 	addiu	sp,sp,-56
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:42
	volatile unsigned int pushbutton, count = 0xF;
bfc01108:	2402000f 	li	v0,15
bfc0110c:	afa20030 	sw	v0,48(sp)
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:43
	volatile unsigned int j = 1;
bfc01110:	24020001 	li	v0,1
bfc01114:	afa2002c 	sw	v0,44(sp)
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:47
	*WRITE_IO(UART_BASE + lcr) = 0x00000080; // LCR[7]  is 1
bfc01118:	24030080 	li	v1,128
bfc0111c:	3c02b040 	lui	v0,0xb040
bfc01120:	ac43100c 	sw	v1,4108(v0)
delay():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:120
	for (j = 0; j < (10000); j++) ;	// delay 
bfc01124:	afa00018 	sw	zero,24(sp)
bfc01128:	8fa20018 	lw	v0,24(sp)
bfc0112c:	2c422710 	sltiu	v0,v0,10000
bfc01130:	10400008 	beqz	v0,bfc01154 <main+0x50>
bfc01134:	3c02b040 	lui	v0,0xb040
bfc01138:	8fa20018 	lw	v0,24(sp)
bfc0113c:	24420001 	addiu	v0,v0,1
bfc01140:	afa20018 	sw	v0,24(sp)
bfc01144:	8fa20018 	lw	v0,24(sp)
bfc01148:	2c422710 	sltiu	v0,v0,10000
bfc0114c:	1440fffa 	bnez	v0,bfc01138 <main+0x34>
bfc01150:	3c02b040 	lui	v0,0xb040
main():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:49
	*WRITE_IO(UART_BASE + dll) = 27; // DLL msb. 115200 at 50MHz. Formula is Clk/16/baudrate. From axi_uart manual.
bfc01154:	2403001b 	li	v1,27
bfc01158:	ac431000 	sw	v1,4096(v0)
delay():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:120
	for (j = 0; j < (10000); j++) ;	// delay 
bfc0115c:	afa0001c 	sw	zero,28(sp)
bfc01160:	8fa2001c 	lw	v0,28(sp)
bfc01164:	2c422710 	sltiu	v0,v0,10000
bfc01168:	10400008 	beqz	v0,bfc0118c <main+0x88>
bfc0116c:	3c02b040 	lui	v0,0xb040
bfc01170:	8fa2001c 	lw	v0,28(sp)
bfc01174:	24420001 	addiu	v0,v0,1
bfc01178:	afa2001c 	sw	v0,28(sp)
bfc0117c:	8fa2001c 	lw	v0,28(sp)
bfc01180:	2c422710 	sltiu	v0,v0,10000
bfc01184:	1440fffa 	bnez	v0,bfc01170 <main+0x6c>
bfc01188:	3c02b040 	lui	v0,0xb040
main():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:51
	*WRITE_IO(UART_BASE + dlm) = 0x00000000; // DLL lsb.
bfc0118c:	ac401004 	sw	zero,4100(v0)
delay():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:120
	for (j = 0; j < (10000); j++) ;	// delay 
bfc01190:	afa00020 	sw	zero,32(sp)
bfc01194:	8fa20020 	lw	v0,32(sp)
bfc01198:	2c422710 	sltiu	v0,v0,10000
bfc0119c:	10400008 	beqz	v0,bfc011c0 <main+0xbc>
bfc011a0:	3c02b040 	lui	v0,0xb040
bfc011a4:	8fa20020 	lw	v0,32(sp)
bfc011a8:	24420001 	addiu	v0,v0,1
bfc011ac:	afa20020 	sw	v0,32(sp)
bfc011b0:	8fa20020 	lw	v0,32(sp)
bfc011b4:	2c422710 	sltiu	v0,v0,10000
bfc011b8:	1440fffa 	bnez	v0,bfc011a4 <main+0xa0>
bfc011bc:	3c02b040 	lui	v0,0xb040
main():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:53
	*WRITE_IO(UART_BASE + lcr) = 0x00000003; // LCR register. 8n1 parity disabled
bfc011c0:	24030003 	li	v1,3
bfc011c4:	ac43100c 	sw	v1,4108(v0)
delay():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:120
	for (j = 0; j < (10000); j++) ;	// delay 
bfc011c8:	afa00024 	sw	zero,36(sp)
bfc011cc:	8fa20024 	lw	v0,36(sp)
bfc011d0:	2c422710 	sltiu	v0,v0,10000
bfc011d4:	10400008 	beqz	v0,bfc011f8 <main+0xf4>
bfc011d8:	3c02b040 	lui	v0,0xb040
bfc011dc:	8fa20024 	lw	v0,36(sp)
bfc011e0:	24420001 	addiu	v0,v0,1
bfc011e4:	afa20024 	sw	v0,36(sp)
bfc011e8:	8fa20024 	lw	v0,36(sp)
bfc011ec:	2c422710 	sltiu	v0,v0,10000
bfc011f0:	1440fffa 	bnez	v0,bfc011dc <main+0xd8>
bfc011f4:	3c02b040 	lui	v0,0xb040
main():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:55
	*WRITE_IO(UART_BASE + ier) = 0x00000000; // IER register. disable interrupts
bfc011f8:	ac401004 	sw	zero,4100(v0)
delay():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:120
	for (j = 0; j < (10000); j++) ;	// delay 
bfc011fc:	afa00028 	sw	zero,40(sp)
bfc01200:	8fa20028 	lw	v0,40(sp)
bfc01204:	2c422710 	sltiu	v0,v0,10000
bfc01208:	10400008 	beqz	v0,bfc0122c <main+0x128>
bfc0120c:	3c07bfc0 	lui	a3,0xbfc0
bfc01210:	8fa20028 	lw	v0,40(sp)
bfc01214:	24420001 	addiu	v0,v0,1
bfc01218:	afa20028 	sw	v0,40(sp)
bfc0121c:	8fa20028 	lw	v0,40(sp)
bfc01220:	2c422710 	sltiu	v0,v0,10000
bfc01224:	1440fffa 	bnez	v0,bfc01210 <main+0x10c>
bfc01228:	3c07bfc0 	lui	a3,0xbfc0
bfc0122c:	3c06bfc0 	lui	a2,0xbfc0
bfc01230:	3c05bfc0 	lui	a1,0xbfc0
bfc01234:	24e71488 	addiu	a3,a3,5256
bfc01238:	24c614b0 	addiu	a2,a2,5296
bfc0123c:	24a514d0 	addiu	a1,a1,5328
main():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:63
		*WRITE_IO(IO_LEDR) = count;
bfc01240:	3c0bb060 	lui	t3,0xb060
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:65
		if (j == 1) {
bfc01244:	24080001 	li	t0,1
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:71
		    if (count == 0x000f)
bfc01248:	240d000f 	li	t5,15
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:67
		    if (count == 0xf000)
bfc0124c:	340cf000 	li	t4,0xf000
uart_outbyte():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:124
	*WRITE_IO(UART_BASE + thr) = (unsigned int) c;
bfc01250:	3c04b040 	lui	a0,0xb040
main():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:101
		*WRITE_IO(PWM_BASE) = period * 110000;
bfc01254:	3c0ab0c0 	lui	t2,0xb0c0
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:108
		*WRITE_IO(F_DATA_BASE) = 0x00000000;//8个数码管都显示0，循环显示
bfc01258:	3c09b0d0 	lui	t1,0xb0d0
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:63
		*WRITE_IO(IO_LEDR) = count;
bfc0125c:	8fa20030 	lw	v0,48(sp)
bfc01260:	ad620000 	sw	v0,0(t3)
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:65
		if (j == 1) {
bfc01264:	8fa2002c 	lw	v0,44(sp)
bfc01268:	1048007d 	beq	v0,t0,bfc01460 <main+0x35c>
bfc0126c:	00000000 	nop
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:70
				count = count >> 1;
bfc01270:	8fa20030 	lw	v0,48(sp)
bfc01274:	00021042 	srl	v0,v0,0x1
bfc01278:	afa20030 	sw	v0,48(sp)
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:71
		    if (count == 0x000f)
bfc0127c:	8fa20030 	lw	v0,48(sp)
bfc01280:	104d007f 	beq	v0,t5,bfc01480 <main+0x37c>
bfc01284:	00000000 	nop
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:75
		inline_assembly();	  	
bfc01288:	34001234 	li	zero,0x1234
bfc0128c:	24020053 	li	v0,83
bfc01290:	00e01825 	move	v1,a3
uart_outbyte():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:124
	*WRITE_IO(UART_BASE + thr) = (unsigned int) c;
bfc01294:	ac821000 	sw	v0,4096(a0)
delay():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:120
	for (j = 0; j < (10000); j++) ;	// delay 
bfc01298:	afa00000 	sw	zero,0(sp)
bfc0129c:	8fa20000 	lw	v0,0(sp)
bfc012a0:	2c422710 	sltiu	v0,v0,10000
bfc012a4:	50400009 	beqzl	v0,bfc012cc <main+0x1c8>
bfc012a8:	24630001 	addiu	v1,v1,1
bfc012ac:	8fa20000 	lw	v0,0(sp)
bfc012b0:	24420001 	addiu	v0,v0,1
bfc012b4:	afa20000 	sw	v0,0(sp)
bfc012b8:	8fa20000 	lw	v0,0(sp)
bfc012bc:	2c422710 	sltiu	v0,v0,10000
bfc012c0:	1440fffa 	bnez	v0,bfc012ac <main+0x1a8>
bfc012c4:	00000000 	nop
uart_print():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:142
		ptr++;
bfc012c8:	24630001 	addiu	v1,v1,1
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:140
	while (*ptr) {
bfc012cc:	90620000 	lbu	v0,0(v1)
bfc012d0:	1440fff0 	bnez	v0,bfc01294 <main+0x190>
bfc012d4:	00000000 	nop
uart_inbyte():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:131
	while(!((*READ_IO(UART_BASE + lsr) & 0x00000001)==0x00000001));
bfc012d8:	8c821014 	lw	v0,4116(a0)
bfc012dc:	30420001 	andi	v0,v0,0x1
bfc012e0:	1040fffd 	beqz	v0,bfc012d8 <main+0x1d4>
bfc012e4:	00000000 	nop
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:133
	RecievedByte = *READ_IO(UART_BASE + rbr);
bfc012e8:	8c8f1000 	lw	t7,4096(a0)
main():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:87
        period = value - 0x30;
bfc012ec:	00c07025 	move	t6,a2
bfc012f0:	24020042 	li	v0,66
bfc012f4:	31ef00ff 	andi	t7,t7,0xff
bfc012f8:	25e3ffd0 	addiu	v1,t7,-48
uart_outbyte():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:124
	*WRITE_IO(UART_BASE + thr) = (unsigned int) c;
bfc012fc:	ac821000 	sw	v0,4096(a0)
delay():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:120
	for (j = 0; j < (10000); j++) ;	// delay 
bfc01300:	afa00004 	sw	zero,4(sp)
bfc01304:	8fa20004 	lw	v0,4(sp)
bfc01308:	2c422710 	sltiu	v0,v0,10000
bfc0130c:	50400009 	beqzl	v0,bfc01334 <main+0x230>
bfc01310:	25ce0001 	addiu	t6,t6,1
bfc01314:	8fa20004 	lw	v0,4(sp)
bfc01318:	24420001 	addiu	v0,v0,1
bfc0131c:	afa20004 	sw	v0,4(sp)
bfc01320:	8fa20004 	lw	v0,4(sp)
bfc01324:	2c422710 	sltiu	v0,v0,10000
bfc01328:	1440fffa 	bnez	v0,bfc01314 <main+0x210>
bfc0132c:	00000000 	nop
uart_print():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:142
		ptr++;
bfc01330:	25ce0001 	addiu	t6,t6,1
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:140
	while (*ptr) {
bfc01334:	91c20000 	lbu	v0,0(t6)
bfc01338:	1440fff0 	bnez	v0,bfc012fc <main+0x1f8>
bfc0133c:	00000000 	nop
main():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:91
		*WRITE_IO(UART_BASE + thr) = value;
bfc01340:	ac8f1000 	sw	t7,4096(a0)
delay():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:120
	for (j = 0; j < (10000); j++) ;	// delay 
bfc01344:	afa00008 	sw	zero,8(sp)
bfc01348:	8fa20008 	lw	v0,8(sp)
bfc0134c:	2c422710 	sltiu	v0,v0,10000
bfc01350:	50400009 	beqzl	v0,bfc01378 <main+0x274>
bfc01354:	00a07025 	move	t6,a1
bfc01358:	8fa20008 	lw	v0,8(sp)
bfc0135c:	24420001 	addiu	v0,v0,1
bfc01360:	afa20008 	sw	v0,8(sp)
bfc01364:	8fa20008 	lw	v0,8(sp)
bfc01368:	2c422710 	sltiu	v0,v0,10000
bfc0136c:	1440fffa 	bnez	v0,bfc01358 <main+0x254>
bfc01370:	00000000 	nop
main():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:87
        period = value - 0x30;
bfc01374:	00a07025 	move	t6,a1
bfc01378:	2402000a 	li	v0,10
uart_outbyte():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:124
	*WRITE_IO(UART_BASE + thr) = (unsigned int) c;
bfc0137c:	ac821000 	sw	v0,4096(a0)
delay():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:120
	for (j = 0; j < (10000); j++) ;	// delay 
bfc01380:	afa0000c 	sw	zero,12(sp)
bfc01384:	8fa2000c 	lw	v0,12(sp)
bfc01388:	2c422710 	sltiu	v0,v0,10000
bfc0138c:	50400009 	beqzl	v0,bfc013b4 <main+0x2b0>
bfc01390:	25ce0001 	addiu	t6,t6,1
bfc01394:	8fa2000c 	lw	v0,12(sp)
bfc01398:	24420001 	addiu	v0,v0,1
bfc0139c:	afa2000c 	sw	v0,12(sp)
bfc013a0:	8fa2000c 	lw	v0,12(sp)
bfc013a4:	2c422710 	sltiu	v0,v0,10000
bfc013a8:	1440fffa 	bnez	v0,bfc01394 <main+0x290>
bfc013ac:	00000000 	nop
uart_print():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:142
		ptr++;
bfc013b0:	25ce0001 	addiu	t6,t6,1
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:140
	while (*ptr) {
bfc013b4:	91c20000 	lbu	v0,0(t6)
bfc013b8:	1440fff0 	bnez	v0,bfc0137c <main+0x278>
bfc013bc:	00000000 	nop
main():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:101
		*WRITE_IO(PWM_BASE) = period * 110000;
bfc013c0:	00031040 	sll	v0,v1,0x1
bfc013c4:	00431021 	addu	v0,v0,v1
bfc013c8:	00021180 	sll	v0,v0,0x6
bfc013cc:	00431023 	subu	v0,v0,v1
bfc013d0:	000270c0 	sll	t6,v0,0x3
bfc013d4:	004e1021 	addu	v0,v0,t6
bfc013d8:	00021080 	sll	v0,v0,0x2
bfc013dc:	00431023 	subu	v0,v0,v1
bfc013e0:	00021100 	sll	v0,v0,0x4
bfc013e4:	ad420000 	sw	v0,0(t2)
delay():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:120
	for (j = 0; j < (10000); j++) ;	// delay 
bfc013e8:	afa00010 	sw	zero,16(sp)
bfc013ec:	8fa20010 	lw	v0,16(sp)
bfc013f0:	2c422710 	sltiu	v0,v0,10000
bfc013f4:	10400008 	beqz	v0,bfc01418 <main+0x314>
bfc013f8:	00000000 	nop
bfc013fc:	8fa20010 	lw	v0,16(sp)
bfc01400:	24420001 	addiu	v0,v0,1
bfc01404:	afa20010 	sw	v0,16(sp)
bfc01408:	8fa20010 	lw	v0,16(sp)
bfc0140c:	2c422710 	sltiu	v0,v0,10000
bfc01410:	1440fffa 	bnez	v0,bfc013fc <main+0x2f8>
bfc01414:	00000000 	nop
main():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:108
		*WRITE_IO(F_DATA_BASE) = 0x00000000;//8个数码管都显示0，循环显示
bfc01418:	ad200000 	sw	zero,0(t1)
delay():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:120
	for (j = 0; j < (10000); j++) ;	// delay 
bfc0141c:	afa00014 	sw	zero,20(sp)
bfc01420:	8fa20014 	lw	v0,20(sp)
bfc01424:	2c422710 	sltiu	v0,v0,10000
bfc01428:	1040ff8c 	beqz	v0,bfc0125c <main+0x158>
bfc0142c:	00000000 	nop
bfc01430:	8fa20014 	lw	v0,20(sp)
bfc01434:	24420001 	addiu	v0,v0,1
bfc01438:	afa20014 	sw	v0,20(sp)
bfc0143c:	8fa20014 	lw	v0,20(sp)
bfc01440:	2c422710 	sltiu	v0,v0,10000
bfc01444:	1440fffa 	bnez	v0,bfc01430 <main+0x32c>
bfc01448:	00000000 	nop
main():
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:63
		*WRITE_IO(IO_LEDR) = count;
bfc0144c:	8fa20030 	lw	v0,48(sp)
bfc01450:	ad620000 	sw	v0,0(t3)
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:65
		if (j == 1) {
bfc01454:	8fa2002c 	lw	v0,44(sp)
bfc01458:	1448ff85 	bne	v0,t0,bfc01270 <main+0x16c>
bfc0145c:	00000000 	nop
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:66
		    count = count << 1;
bfc01460:	8fa20030 	lw	v0,48(sp)
bfc01464:	00021040 	sll	v0,v0,0x1
bfc01468:	afa20030 	sw	v0,48(sp)
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:67
		    if (count == 0xf000)
bfc0146c:	8fa20030 	lw	v0,48(sp)
bfc01470:	504cff85 	beql	v0,t4,bfc01288 <main+0x184>
bfc01474:	afa0002c 	sw	zero,44(sp)
bfc01478:	1000ff83 	b	bfc01288 <main+0x184>
bfc0147c:	00000000 	nop
C:\workspace\lab3\MIPSfpga_CustomIP_C/main.c:72
		        j = 1;
bfc01480:	1000ff81 	b	bfc01288 <main+0x184>
bfc01484:	afa8002c 	sw	t0,44(sp)
bfc01488:	656c6553 	0x656c6553
bfc0148c:	61207463 	0x61207463
bfc01490:	69724220 	0x69724220
bfc01494:	6e746867 	0x6e746867
bfc01498:	20737365 	addi	s3,v1,29541
bfc0149c:	77746562 	jalx	bdd19588 <_ftext_init-0x1ee6a78>
bfc014a0:	206e6565 	addi	t6,v1,25957
bfc014a4:	6e612030 	0x6e612030
bfc014a8:	0a392064 	j	b8e48190 <_ftext_init-0x6db7e70>
bfc014ac:	0000000d 	break
bfc014b0:	67697242 	0x67697242
bfc014b4:	656e7468 	0x656e7468
bfc014b8:	4c207373 	0x4c207373
bfc014bc:	6c657665 	0x6c657665
bfc014c0:	6c657320 	0x6c657320
bfc014c4:	65746365 	0x65746365
bfc014c8:	73692064 	s8ldi	xr1,k1,72,ptn2
bfc014cc:	0000203a 	0x203a
bfc014d0:	00000d0a 	0xd0a
bfc014d4:	00000000 	nop
